{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Createanime() {\n  const submit = () => {\n    axios.post(\"http://localhost:8080/api/auth/reg\", {}, {\n      withCredentials: true\n    }).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log('Ошибка : ', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Create anime!\"\n  }, void 0, false);\n}\n_c = Createanime;\nexport default Createanime;\nvar _c;\n$RefreshReg$(_c, \"Createanime\");","map":{"version":3,"names":["Createanime","submit","axios","post","withCredentials","then","response","console","log","catch","error","_jsxDEV","_Fragment","children","_c","$RefreshReg$"],"sources":["C:/Users/Comp/OneDrive/Рабочий стол/git project/aniweb/frontend/src/component/main/adpanel/anime/Createanime.jsx"],"sourcesContent":["\r\n\r\n\r\nfunction Createanime() {\r\n\r\n\r\n    const submit = () => {\r\n        axios\r\n            .post(\"http://localhost:8080/api/auth/reg\", {\r\n\r\n            }, \r\n            {withCredentials: true})\r\n            \r\n            .then((response) => {\r\n                console.log(response)\r\n                \r\n            })\r\n            \r\n            .catch((error) => {\r\n                console.log('Ошибка : ',error)\r\n            })\r\n    }; \r\n\r\n\r\n    return (  \r\n        <>\r\n            Create anime!\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Createanime;"],"mappings":";;AAGA,SAASA,WAAWA,CAAA,EAAG;EAGnB,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACjBC,KAAK,CACAC,IAAI,CAAC,oCAAoC,EAAE,CAE5C,CAAC,EACD;MAACC,eAAe,EAAE;IAAI,CAAC,CAAC,CAEvBC,IAAI,CAAEC,QAAQ,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IAEzB,CAAC,CAAC,CAEDG,KAAK,CAAEC,KAAK,IAAK;MACdH,OAAO,CAACC,GAAG,CAAC,WAAW,EAACE,KAAK,CAAC;IAClC,CAAC,CAAC;EACV,CAAC;EAGD,oBACIC,OAAA,CAAAC,SAAA;IAAAC,QAAA,EAAE;EAEF,gBAAE,CAAC;AAEX;AAACC,EAAA,GA1BQd,WAAW;AA4BpB,eAAeA,WAAW;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}